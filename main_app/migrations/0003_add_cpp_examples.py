# Generated by Django 5.1.3 on 2025-04-12 12:03

from django.db import migrations


def add_cpp_examples(apps, schema_editor):
    CppExample = apps.get_model("main_app", "CppExample")

    examples = [
        {
            "code": "#include <iostream>\nint main() {\n    int x = 5 / 0;\n    std::cout << x << std::endl;\n    return 0;\n}",
            "status": "undefined behavior",
            "explanation": "Division by zero for integers is undefined behavior and may cause a crash or garbage output.",
        },
        {
            "code": "#include <iostream>\nint main() {\n    int x;\n    std::cout << x << std::endl;\n    return 0;\n}",
            "status": "undefined behavior",
            "explanation": "Reading an uninitialized local variable leads to undefined behavior.",
        },
        {
            "code": '#include <iostream>\nint main() {\n    std::cout << "Hello, world!" << std::endl;\n    return 0;\n}',
            "status": "the program is guaranteed to output Hello, world!",
            "explanation": "This is a valid program that prints and exits normally.",
        },
        {
            "code": "#include <iostream>\nint main() {\n    int arr[5];\n    arr[10] = 3;\n    std::cout << arr[10] << std::endl;\n    return 0;\n}",
            "status": "undefined behavior",
            "explanation": "Writing beyond the bounds of a fixed-size array causes undefined behavior.",
        },
        {
            "code": 'int main() {\n    return "hello";\n}',
            "status": "does not compile",
            "explanation": "Returning a string literal from a function declared to return int is a compile error.",
        },
        {
            "code": "#include <iostream>\nint main() {\n    int x = 1;\n    int y = x++ + ++x;\n    std::cout << y << std::endl;\n    return 0;\n}",
            "status": "undefined behavior",
            "explanation": "The sequencing on preincrement and postincrement on x is not defined",
        },
        {
            "code": "#include <iostream>\nint main() {\n    int x = 10;\n    std::cout << (x << 32) << std::endl;\n    return 0;\n}",
            "status": "undefined behavior",
            "explanation": "Shifting by >= bit width of type (like 32 on int) is undefined behavior.",
        },
        {
            "code": "int main() {\n    int x = 10;\n    int y = x / 3;\n    return y;\n}",
            "status": "the program is guaranteed to output nothing",
            "explanation": "The program does not use std::cout, so nothing is printed, but return is valid.",
        },
    ]

    for ex in examples:
        CppExample.objects.create(
            code=ex["code"], status=ex["status"], explanation=ex["explanation"]
        )


class Migration(migrations.Migration):

    dependencies = [
        ("main_app", "0002_quizattempt"),
    ]

    operations = [
        migrations.RunPython(add_cpp_examples),
    ]
